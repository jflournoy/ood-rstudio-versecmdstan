#!/usr/bin/env bash
# Start RStudio Server
#
set -x

<%- unless context.modules.blank? -%>
# Purge the module environment to avoid conflicts
module purge

# Load the require modules
module load <%= context.modules %>

# List loaded modules
module list
<%- end -%>

export RSTUDIO_AUTH="${PWD}/bin/pam-helper.sh"
chmod +x $RSTUDIO_AUTH

export JOB_CONFIG_DIR=${PWD}
export OMP_NUM_THREADS=${SLURM_JOB_CPUS_PER_NODE}

export container_image=/ncf/mclaughlin/users/jflournoy/data/containers/verse-cmdstan-cuda.simg
#/ncf/mclaughlin/users/jflournoy/.fasseood/dev/rstudio-app/verse-cmdstan-ggseg-libs.simg


#get cmdstan path to set as environment variable in Renviron
CMDSTANPATH=$(singularity inspect -e ${container_image} | awk '$2~/CMDSTAN=/ { print gensub(/CMDSTAN=.*(\/cmdstan\/cmdstan-[0-9\\.]+).*/, "\\1", "g", $2);}')

# [Rstudio 1.4] database is required
cat > ${JOB_CONFIG_DIR}/database.conf <<END
provider=sqlite
directory=/var/lib/rstudio-server
END

# [Rstudio 1.4] configure logging
cat > ${JOB_CONFIG_DIR}/logging.conf <<END
[@rserver]
log-level=info
max-size-mb=10
END

## this is needed because each job needs to see only one server conf folder
mkdir -p $HOME/.rstudio
mkdir -p $HOME/.local/share/rstudio/
cd $WORKING_DIR

## this is what I will bind to /tmp as I need to hide each job from each other
#export SCRATCHDIR=/scratch/$USER/$SLURM_JOBID
#changed the above to the below for a little more control
#

export SCRATCHDIR="$SCRATCH/LABS/mclaughlin_lab/Users/$USER/$SLURM_JOBID"
<%- if !context.scratch.blank? -%>
export SCRATCHDIR="<%= context.scratch %>/$USER/$SLURM_JOBID"
<%- end -%>
mkdir -m 700 -p $SCRATCHDIR
export MYTMP=$SCRATCHDIR/tmp
mkdir -m 700 -p $MYTMP
# Need a unique /tmp for this job for /tmp/rstudio-rsession & /tmp/rstudio-server
#mkdir -p ${SCRATCHDIR}/var/run/{lock/rstudio-server,rstudio-server/rstudio-rsession,mount,systemd,munge} 
mkdir -p "${SCRATCHDIR}/var/lib/rstudio-server"
mkdir -p "${SCRATCHDIR}/logs"
mkdir -p "$SCRATCHDIR/tmp/rstudio-server"
uuidgen > "$SCRATCHDIR/tmp/rstudio-server/secure-cookie-key"
chmod 0600 "$SCRATCHDIR/tmp/rstudio-server/secure-cookie-key"
mkdir -p "$SCRATCHDIR/var/run"
mkdir -p "$SCRATCHDIR/etc/rstudio"
mkdir -p "$SCRATCHDIR/.Renviron"
OVERLAY="$SCRATCHDIR/$(uuidgen).img"
singularity overlay create --size 2512 "${OVERLAY}"

cat > $SCRATCHDIR/.Renviron/.Renviron <<END
CMDSTAN=${CMDSTANPATH}
https_proxy=rcproxy.rc.fas.harvard.edu:3128
HOST_PATH=${PATH}
END

## add user R libs if specified
<%- if !context.rlibs.blank? -%>

mkdir -p <%= context.rlibs %>

if [ -d <%= context.rlibs %> ] ; then
cat >> $SCRATCHDIR/.Renviron/.Renviron <<END
R_LIBS=<%= context.rlibs %>
END
fi

<%- end -%>

cat 1>&2 <<END > $SCRATCHDIR/etc/rstudio/rsession-profile
export SLURM_CPUS_PER_TASK=${SLURM_CPUS_PER_TASK}
END

export SING_GPU=""

<%- if !context.custom_num_gpus.to_i.zero? -%>
export SING_GPU="--nv"
<%- end -%>

# Launch the RStudio Server
echo "Starting up rserver..."
export SINGULARITYENV_USER=$(id -un)
export SINGULARITYENV_PASSWORD=${RSTUDIO_PASSWORD}
export SINGULARITYENV_RSTUDIO_PASSWORD=${RSTUDIO_PASSWORD}
export SINGULARITYENV_https_proxy=rcproxy.rc.fas.harvard.edu:3128
export SINGULARITYENV_OMP_NUM_THREADS=${OMP_NUM_THREADS}
export SINGULARITYENV_R_LIBS_USER=${R_LIBS_USER}
singularity exec $SING_GPU \
	--overlay ${OVERLAY} \
	--bind /ncf \
	--bind ${SCRATCHDIR}/var/run:/var/run \
	--bind ${SCRATCHDIR}/logs:/var/log/rstudio-server \
	--bind ${SCRATCHDIR}/var/lib/rstudio-server:/var/lib/rstudio-server \
	--bind ${SCRATCHDIR}/tmp:/tmp \
	--bind $SCRATCHDIR/etc/rstudio/rsession-profile:/etc/rstudio/rsession-profile \
	--bind ${JOB_CONFIG_DIR}/database.conf:/etc/rstudio/database.conf \
	--bind ${JOB_CONFIG_DIR}/logging.conf:/etc/rstudio/logging.conf \
	--bind $RSTUDIO_AUTH:/usr/lib/rstudio-server/bin/pam-helper \
	--bind $SCRATCHDIR/.Renviron/.Renviron:$(getent passwd ${USER}|cut -d: -f6)/.Renviron \
	$container_image \
	/usr/lib/rstudio-server/bin/rserver \
	--server-user=${USER} \
	--www-port ${port} \
        --auth-none=1

#        --auth-pam-helper-path=pam-helper \
#        --auth-stay-signed-in-days=30 \
#        --auth-timeout-minutes=0
